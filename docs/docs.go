// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/employee/add": {
            "post": {
                "description": "Add employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "description": "employee data",
                        "name": "Employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employee_controller.addBodyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee_controller.addBodyResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/employee/delete": {
            "delete": {
                "description": "Remove employee by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "description": "employee data",
                        "name": "Employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employee_controller.deleteBodyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/employee/get/by_company": {
            "post": {
                "description": "Get employee by company ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "description": "employee data",
                        "name": "Employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employee_controller.getByCompanyBodyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee_controller.getByCompanyBodyResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/employee/get/by_company_department": {
            "post": {
                "description": "Get employee by company ID and department name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "description": "employee data",
                        "name": "Employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employee_controller.getByCompanyDepartmentBodyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee_controller.getByCompanyDepartmentBodyResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/employee/update": {
            "post": {
                "description": "Update employee data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "parameters": [
                    {
                        "description": "employee data",
                        "name": "Employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.DepartmentDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "dto.EmployeeDTO": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer"
                },
                "department": {
                    "$ref": "#/definitions/dto.DepartmentDTO"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passport": {
                    "$ref": "#/definitions/dto.PassportDTO"
                },
                "phone": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "dto.PassportDTO": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "employee_controller.addBodyReq": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer"
                },
                "department": {
                    "$ref": "#/definitions/entities.Department"
                },
                "name": {
                    "type": "string"
                },
                "passport": {
                    "$ref": "#/definitions/entities.Passport"
                },
                "phone": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "employee_controller.addBodyResp": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "integer"
                }
            }
        },
        "employee_controller.deleteBodyReq": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "integer"
                }
            }
        },
        "employee_controller.getByCompanyBodyReq": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer"
                }
            }
        },
        "employee_controller.getByCompanyBodyResp": {
            "type": "object",
            "properties": {
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Employee"
                    }
                }
            }
        },
        "employee_controller.getByCompanyDepartmentBodyReq": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer"
                },
                "departmentName": {
                    "type": "string"
                }
            }
        },
        "employee_controller.getByCompanyDepartmentBodyResp": {
            "type": "object",
            "properties": {
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Employee"
                    }
                }
            }
        },
        "entities.Department": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "entities.Employee": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer"
                },
                "department": {
                    "$ref": "#/definitions/entities.Department"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passport": {
                    "$ref": "#/definitions/entities.Passport"
                },
                "phone": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "entities.Passport": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
